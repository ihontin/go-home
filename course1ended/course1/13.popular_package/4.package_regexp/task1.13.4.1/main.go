package main

import (
	"fmt"
	"regexp"
)

//. - любой одиночный символ
//[ ] - любой из них, диапазоны
//[^ ] - любой кроме них, диапазоны
//( ) - группа символов
//$ - конец строки
//^ - начало строки
//\ - экранирование
//\d - любую цифру
//\D - все что угодно, кроме цифр
//\s - пробелы
//\S - все кроме пробелов
//\w - буква и цифра диапазон [a-zA-Z0-9_]
//\W - все кроме букв и цифр
//\b - граница слова
//\B - не границ
//
//Квантификация
//n{4} - искать n подряд 4 раза
//n{4,6} - искать n от 4 до 6
//* от нуля и выше
//+ от 1 и выше
//? - ноль или 1 раз

//Напиши программу на языке Go, которая принимает на вход строку и проверяет,
//является ли она валидным email-адресом с использованием регулярных выражений.
//func main() {
//	//email := "invalid_email"
//	email := "test@example.com"
//	valid := isValidEmail(email)
//	if valid {
//		fmt.Printf("%s является валидным email-адресом\n", email)
//	} else {
//		fmt.Printf("%s не является валидным email-адресом\n", email)
//	}
//}

func isValidEmail(email string) bool {
	if email == "" {
		return false
	}
	reg, err := regexp.Compile(`^(.+)\.(.+)$`)
	if err != nil {
		fmt.Errorf("regexp ERROR: %v", err)
	}
	return reg.MatchString(email)
}
