// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package mock_main is a generated GoMock package.
package mock_main

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "studentgit.kata.academy/Alkolex/go-kata/course2/3.patterns/1.patterns_adapter/task2.3.1.1/model"
)

// MockGithuber is a mock of Githuber interface.
type MockGithuber struct {
	ctrl     *gomock.Controller
	recorder *MockGithuberMockRecorder
}

// MockGithuberMockRecorder is the mock recorder for MockGithuber.
type MockGithuberMockRecorder struct {
	mock *MockGithuber
}

// NewMockGithuber creates a new mock instance.
func NewMockGithuber(ctrl *gomock.Controller) *MockGithuber {
	mock := &MockGithuber{ctrl: ctrl}
	mock.recorder = &MockGithuberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGithuber) EXPECT() *MockGithuberMockRecorder {
	return m.recorder
}

// GetGists mocks base method.
func (m *MockGithuber) GetGists(ctx context.Context, username string) ([]model.Item, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGists", ctx, username)
	ret0, _ := ret[0].([]model.Item)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGists indicates an expected call of GetGists.
func (mr *MockGithuberMockRecorder) GetGists(ctx, username interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGists", reflect.TypeOf((*MockGithuber)(nil).GetGists), ctx, username)
}

// GetRepos mocks base method.
func (m *MockGithuber) GetRepos(ctx context.Context, username string) ([]model.Item, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRepos", ctx, username)
	ret0, _ := ret[0].([]model.Item)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRepos indicates an expected call of GetRepos.
func (mr *MockGithuberMockRecorder) GetRepos(ctx, username interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRepos", reflect.TypeOf((*MockGithuber)(nil).GetRepos), ctx, username)
}
